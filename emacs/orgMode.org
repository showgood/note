#+SETUPFILE: ~/org/org-minimal-theme.setup

* navigation
jump to a heading in the org file: *SPC j i*
* settings
** syntax highlight
#+BEGIN_SRC emacs-lisp
;; fontify code in code blocks
(setq org-src-fontify-natively t)
#+END_SRC

** show images inline
basically two steps:
- put *#+STARTUP: inlineimages* at beginning of the org file
- insert link to the file, but leave the *description empty*!

** set local file varaible
put something like this at beginning of the org file:
#+BEGIN_EXAMPLE
# -*- org-image-actual-width: nil; -*-
#+END_EXAMPLE
* GTD
** org-agenda
*** org agenda bulk operations
| keys | operation                     |
|------+-------------------------------|
| m    | mark one entry                |
| *    | mark all entries              |
| u    | unmark one entry              |
| U    | unmark all entries            |
| B    | bulk operation(after marking) |
*** display exact time for appointment/meeting
sometimes org agenda doesn't dispaly some of my appointment/meeting properly:

#+BEGIN_EXAMPLE
Calendar:   Scheduled:  lunch with brother :APPOINTMENT:
#+END_EXAMPLE

although I already set the schedule time like this:

#+BEGIN_EXAMPLE
SCHEDULED: <2016-03-03 Thu 12pm>
#+END_EXAMPLE

later finally find out the scheduled time has to set like this:
#+BEGIN_EXAMPLE
SCHEDULED: <2016-03-03 Thu 12:00pm>
#+END_EXAMPLE

then it works, would display as:
#+BEGIN_EXAMPLE
Calendar:   12:00...... Scheduled:  lunch with brother :APPOINTMENT:
#+END_EXAMPLE
** rotate todo status
C-c C-t

** bulk archive
https://stackoverflow.com/questions/6997387/how-to-archive-all-the-done-tasks-using-a-single-command

http://orgmode.org/manual/Agenda-commands.html#Agenda-commands

If you call Org-Agenda from within the buffer you want to archive you can
temporarily restrict it to only that buffer and view only todo entries and
filter for only DONE

steps:
- C-c a < t
- N r
Where N corresponds to the shortcut for your DONE state (with default states it
would be 2)
- Then you'd simply need to mark all the desired headlines and bulk archive
- m (mark for bulk action)
- B $
* add tag
C-c C-q
NOTE: tag can not has ~-~ but can have ~_~.
ie. no-return is not valid tag. but no_return is.
otherwise search by tag won't work
* superscript / subscript
^ is used for superscript
_ is used for subscript
* footnote
| commands  | description             |
|-----------+-------------------------|
| C-c C-x f | insert/re-number        |
| C-c C-c   | jump to definition/back |

seems like the footnote can't start as first thing in a line,
there should be some thing before it. [fn:2]
* drag drop image easily into org mode file
use the plugin org-download:
https://github.com/abo-abo/org-download
* table
** create table
select the lines (field can be separated with space or comma), then type:
C-c |
** sort table
~C-c ^~

The column currently containing the cursor can be sorted using the C-c ^ key
combination.

You will be prompted to indicate whether the sort should occur by:
#+BEGIN_EXAMPLE
[a]lphabetically - decending
[A]lphabetically - acending
[n]umerically - lowest to highest
[N]umerically - highest to lowest
[t]ime - oldest to youngest
[T]ime - youngest to oldest
#+END_EXAMPLE
** formula
*** table level formula
C-c =
*** Cell references [fn:3]
cells are typically of the formula
#+BEGIN_EXAMPLE
@row$column
#+END_EXAMPLE

Row and column references can be toggled on and off with the ~C-c }~ key
combination.

To get the reference options for the current cell, type ~C-c ?~  [fn:3]
*** field formula [fn:4]
type formula in that field, start with ~:=~
for example:
#+begin_src emacs-lisp
:=vsum(@2..@10)
#+end_src

will sum the column from row 2 (row 1 is header) to row 10

| item  | price | another |
|-------+-------+---------|
| sss   |   234 |     883 |
| kkk   |    19 |     181 |
| total |   253 |    1064 |
#+TBLFM: @4$2=vsum(@2..@3)::@4$3=vsum(@2..@3)
*** run formula through whole table:
put cursor at formula line, then:
~C-c C-c~
** functions can be used for formula
| Function     | Description                               |
|--------------+-------------------------------------------|
| vsum(v)      | sum of vector                             |
| vprod(v)     | product of vector                         |
| vcount(v)    | length of vector (non blanks)             |
| vlen(v)      | length of vector (non blanks)             |
| vmin(v)      | minimum of vector (non blanks)            |
| vmax(v)      | maximum of vector (non blanks)            |
| vmean(v)     | mean of vector (non blanks)               |
| vmedian(v)   | median of vector (non blanks)             |
| vsdev(v)     | standard deviation of vector (non blanks) |
| vvar(v)      | variance of vector (non blanks)           |
| vcov(v1, v2) | covariance of two vector (non blanks)     |
| vcor(v1, v2) | correlation of two vector (non blanks)    |
| exp(c)	   | exponential                               |
| log(c)       | natural logarithm                         |
| log10(c)     | log base 10                               |
| sqrt(c)      | square-root                               |
| vmin(v)      | minimum of vector (non blanks)            |
| vmax(v)      | maximum of vector (non blanks)            |
| vmean(v)     | mean of vector (non blanks)               |
| vmedian(v)   | median of vector (non blanks)             |
| vsdev(v)     | standard deviation of vector (non blanks) |
| vvar(v)      | variance of vector (non blanks)           |
| vcov(v1, v2) | covariance of two vector (non blanks)     |
| vcor(v1, v2) | correlation of two vector (non blanks)    |
** keys
#+ATTR_HTML:   :border 2 :rules all :frame border
| keys         | purpose                        | note                  |
|--------------+--------------------------------+-----------------------|
| Tab          | move to next cell              |                       |
| S-Tab        | move to previous cell          |                       |
| M-S-left     | delete column                  |                       |
| M-S-right    | add column                     |                       |
| M-S-up       | delete row                     |                       |
| M-S-down     | add row                        |                       |
| M-left/right | move column to left/right      |                       |
| M-up/down    | move row to up/down            |                       |
| C-c -        | add separator row              |                       |
| S-RET        | copy content from cell above   |                       |
| C-c <SPC>    | clear the cell content         | org-table-blank-field |
| C-c ^        | sort table with current column |                       |
| C-c }        | toggle row/column reference    |                       |
| C-c {        | debug formula                  |                       |
| C-c ?        | show current cell reference    |                       |
* export
** prettyify table export
to prettify the exported table in HTML,Put this right above the table:

#+BEGIN_SRC org
#+ATTR_HTML:   :border 2 :rules all :frame border
#+END_SRC
*** set the html export attribute for all tables in the org mode file
set *org-html-table-default-attributes* as below: [fn:1]
#+BEGIN_SRC emacs-lisp
(setq org-html-table-default-attributes '(:border "2" :rules "all" :frame "border"))
#+END_SRC
** export the properties of headlines
#+BEGIN_SRC elisep
(setq org-export-with-properties t)
#+END_SRC
** escape the superscript/ subscript during html export
\_ no longer works..
has to use = to surround the string, something like: ~=no_subscript=~
** disable emacs convert underscore(_) to subscript during export
*** option 1 (global)
#+BEGIN_SRC emacs-lisp
(setq org-export-with-sub-superscripts '{})
#+END_SRC
*** option 2 (file level)
put this in the beginning of org file:
#+BEGIN_SRC org
#+OPTIONS: ^:nil
#+END_SRC
** only export certain subtree
- C-c C-e
- C-s to change the export scope (buffer or subtree)
rest is same
** resize image for export
use *#+attr_html: :width 100px* 
http://orgmode.org/worg/org-8.0.html#sec-8-3
#+BEGIN_SRC org
#+attr_html: :width 100px
[[~/images/example.jpg]]
#+END_SRC
* time tracking
** keys
| keys      | description                          |
|-----------+--------------------------------------|
| F2        | go to active timer                   |
| F3        | start timer                          |
| F4        | stop timer                           |
| C-c C-x r | add time block table for the subtree |
** show where time spent for yesterday
put this at beginning of the org file:
#+BEGIN_SRC org
#+BEGIN: clocktable :maxlevel 4 :emphasize nil :scope file :block yesterday
#+END: clocktable
#+END_SRC
** reference
http://orgmode.org/manual/The-clock-table.html#index-clocktable_002c-dynamic-block-926
http://irreal.org/blog/?p=5323
* image
** scale the inline image in org mode
- first set this either in init file or org file:
#+BEGIN_SRC emacs-lisp
(setq org-image-actual-width nil)
#+END_SRC

- second add this property upon image link:
#+BEGIN_EXAMPLE
#+NAME: fig:figure name
#+CAPTION: figure name
#+ATTR_ORG: :width 200/250/300/400/500/600
#+ATTR_LATEX: :width 2.0in
#+ATTR_HTML: :width 200/250/300/400/500/600px
#+END_EXAMPLE

source: https://emacs.stackexchange.com/questions/26363/downscaling-inline-images-in-org-mode
* org publish
** force to re-generate all files even files have not changed
basically can use use a *prefix argument* to achieve it.
in spacemacs under evil mode, press 1, then followed by *M-x org-publish* would work.

reference: https://stackoverflow.com/questions/21258769/using-emacs-org-mode-how-to-publish-the-unchanged-files-in-a-project
* easy templates
use ~<x~ followed by ~Tab~ to get expansion.
~x~ can be anything from table below:
| key | expansion                             |
|-----+---------------------------------------|
| s   | #+BEGIN_SRC ... #+END_SRC             |
| e   | #+BEGIN_EXAMPLE ... #+END_EXAMPLE     |
| q   | #+BEGIN_QUOTE ... #+END_QUOTE         |
| v   | #+BEGIN_VERSE ... #+END_VERSE         |
| c   | #+BEGIN_CENTER ... #+END_CENTER       |
| C   | #+BEGIN_COMMENT ... #+END_COMMENT     |
| l   | #+BEGIN_EXPORT latex ... #+END_EXPORT |
| L   | #+LATEX:                              |
| h   | #+BEGIN_EXPORT html ... #+END_EXPORT  |
| H   | #+HTML:                               |
| a   | #+BEGIN_EXPORT ascii ... #+END_EXPORT |
| A   | #+ASCII:                              |
| i   | #+INDEX: line                         |
| I   | #+INCLUDE: line                       |

More templates can added by customizing the variable
~org-structure-template-alist~, whose docstring has additional details.
* make link works for github
when github render the org mode file, the normal org mode link
would be broken if it's referring to the org mode file.

Here's how to make it work (example taken from https://github.com/noctuid/lispyville)
link needs to be written like this:
#+BEGIN_EXAMPLE
(see [[#lispy-settings][Lispy Settings]])
#+END_EXAMPLE

then the headline referred should have property like this:

#+BEGIN_EXAMPLE
* Footnotes
[fn:2] http://orgmode.org/manual/Footnotes.html
[fn:1] http://orgmode.org/manual/Tables-in-HTML-export.html#Tables-in-HTML-export
[fn:3] http://www.flutterbys.com.au/stats/tut/tut16.1.html
[fn:4] http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html
